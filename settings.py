"""
Django settings for lobby project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from google.oauth2 import service_account
import os
import environ

env = environ.Env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent

env.read_env(str(BASE_DIR / ".django/.env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$sd@c&9x3$x**rf#j$5h6sw1y_)oew&by&0vi-ww5atx5k&tcw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '*'
]


# Application definition

INSTALLED_APPS = [
    #custom admin (nota: tiene que estar hasta aca arriba)
    'custom_admin',
    
    #Django default
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # Auth
    'users',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.instagram',

    # Registro de apps
    'lobby',
    'reservations',
    'tournaments',
    'restaurante',
    'politicas',
    'cookies_servicios',
    'custom_perfil',
    
    # Desinstalar django extensions para produccion
    'django_extensions',
]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = 'urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lobby.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DB_USER = env("DB_USER")
DB_PASSWORD = env("DB_PASSWORD")
DB_HOST = env("DB_HOST",default="localhost")
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'lobby',
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': '3306'
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es-mx'

TIME_ZONE = 'America/Mexico_City'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


STATIC_URL = '/static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
    BASE_DIR / "node_modules",   
]

STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Configuracion de nuestro user para la AUTH
AUTH_USER_MODEL = 'users.User'


# Deshabilita confirmacion de logout
ACCOUNT_LOGOUT_ON_GET = True

# Configuraciones extra para allauth
LOGIN_REDIRECT_URL = 'home'
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
AUTH_USER_MODEL = 'users.User'

# TODO: no se si debamos de dejar esto sin email de verificacion, ahorita esta asi para evitar error al crear una cuenta
ACCOUNT_EMAIL_VERIFICATION = "none"

ACCOUNT_FORMS = {
    'signup': 'users.forms.CustomSignupForm',
}

# Configuracion google cloud storage

STORAGES = {
    "default": {
        "BACKEND": "storages.backends.gcloud.GoogleCloudStorage",
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
}

MEDIA_URL = "/app_gobierno/"

GS_BUCKET_NAME = env("GS_BUCKET_NAME")

GOOGLE_DRIVE_STORAGE_JSON_KEY_FILE = os.path.join(
    BASE_DIR, '.django/lobby-443421-1887ded976cd.json')

GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
    GOOGLE_DRIVE_STORAGE_JSON_KEY_FILE
)

GS_SECRET_KEY = env("GS_SECRET_KEY")
GS_CLIENT_ID = env("GS_CLIENT_ID")

FB_SECRET_KEY = env("FB_SECRET_KEY")
FB_PROJECT_ID = env("FB_PROJECT_ID")

GOOGLE_CREDENTIALS = os.path.join(BASE_DIR, '.django/client_secret_324906867711-c6ujnioalu9fdtnou3upu8bia4n6euhd.apps.googleusercontent.com.json')

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'name':'Lobby',
            'client_id': GS_CLIENT_ID,
            'secret': GS_SECRET_KEY,
            'key': ''
        },
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    },
    'facebook': {
        'METHOD': 'oauth2',  # Set to 'js_sdk' to use the Facebook connect SDK
        # 'SDK_URL': '//connect.facebook.net/{locale}/sdk.js',
        'SCOPE': ['email', 'public_profile'],
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'INIT_PARAMS': {'cookie': True},
        'FIELDS': [
            'id',
            'first_name',
            'last_name',
            'middle_name',
            'name',
            'name_format',
            'picture',
            'short_name'
        ],
        'EXCHANGE_TOKEN': True,
        # 'LOCALE_FUNC': 'path.to.callable',
        'VERIFIED_EMAIL': False,
        'VERSION': 'v13.0',
        'GRAPH_API_URL': 'https://graph.facebook.com/v13.0',
        'APP': {
            'name': 'Lobby',
            'client_id': FB_PROJECT_ID,
            'secret': FB_SECRET_KEY,
            'key': ''
        }
    },
    'instagram': {
        'APP': {
            'client_id': FB_PROJECT_ID,
            'secret': FB_SECRET_KEY,
            'key': ''
        },
        'SCOPE': [
            'user_profile',
            'user_media',
        ],
        'AUTH_PARAMS': {
            'auth_type': 'reauthenticate',
        },
    }
}
SOCIALACCOUNT_LOGIN_ON_GET=True
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
